// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: recently_played_backend.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spotify.RecentlyPlayedBackend.Proto {

  /// <summary>Holder for reflection information generated from recently_played_backend.proto</summary>
  public static partial class RecentlyPlayedBackendReflection {

    #region Descriptor
    /// <summary>File descriptor for recently_played_backend.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RecentlyPlayedBackendReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch1yZWNlbnRseV9wbGF5ZWRfYmFja2VuZC5wcm90bxIlc3BvdGlmeS5yZWNl",
            "bnRseV9wbGF5ZWRfYmFja2VuZC5wcm90byIuCgdDb250ZXh0EgsKA3VyaRgB",
            "IAEoCRIWCg5sYXN0UGxheWVkVGltZRgCIAEoAyJxCg5SZWNlbnRseVBsYXll",
            "ZBJACghjb250ZXh0cxgBIAMoCzIuLnNwb3RpZnkucmVjZW50bHlfcGxheWVk",
            "X2JhY2tlbmQucHJvdG8uQ29udGV4dBIOCgZvZmZzZXQYAiABKAUSDQoFdG90",
            "YWwYAyABKAU="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spotify.RecentlyPlayedBackend.Proto.Context), global::Spotify.RecentlyPlayedBackend.Proto.Context.Parser, new[]{ "Uri", "LastPlayedTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spotify.RecentlyPlayedBackend.Proto.RecentlyPlayed), global::Spotify.RecentlyPlayedBackend.Proto.RecentlyPlayed.Parser, new[]{ "Contexts", "Offset", "Total" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Context : pb::IMessage<Context>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Context> _parser = new pb::MessageParser<Context>(() => new Context());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Context> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spotify.RecentlyPlayedBackend.Proto.RecentlyPlayedBackendReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Context() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Context(Context other) : this() {
      _hasBits0 = other._hasBits0;
      uri_ = other.uri_;
      lastPlayedTime_ = other.lastPlayedTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Context Clone() {
      return new Context(this);
    }

    /// <summary>Field number for the "uri" field.</summary>
    public const int UriFieldNumber = 1;
    private readonly static string UriDefaultValue = "";

    private string uri_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uri {
      get { return uri_ ?? UriDefaultValue; }
      set {
        uri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "uri" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUri {
      get { return uri_ != null; }
    }
    /// <summary>Clears the value of the "uri" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUri() {
      uri_ = null;
    }

    /// <summary>Field number for the "lastPlayedTime" field.</summary>
    public const int LastPlayedTimeFieldNumber = 2;
    private readonly static long LastPlayedTimeDefaultValue = 0L;

    private long lastPlayedTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LastPlayedTime {
      get { if ((_hasBits0 & 1) != 0) { return lastPlayedTime_; } else { return LastPlayedTimeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        lastPlayedTime_ = value;
      }
    }
    /// <summary>Gets whether the "lastPlayedTime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLastPlayedTime {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "lastPlayedTime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLastPlayedTime() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Context);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Context other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uri != other.Uri) return false;
      if (LastPlayedTime != other.LastPlayedTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUri) hash ^= Uri.GetHashCode();
      if (HasLastPlayedTime) hash ^= LastPlayedTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUri) {
        output.WriteRawTag(10);
        output.WriteString(Uri);
      }
      if (HasLastPlayedTime) {
        output.WriteRawTag(16);
        output.WriteInt64(LastPlayedTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUri) {
        output.WriteRawTag(10);
        output.WriteString(Uri);
      }
      if (HasLastPlayedTime) {
        output.WriteRawTag(16);
        output.WriteInt64(LastPlayedTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUri) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uri);
      }
      if (HasLastPlayedTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastPlayedTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Context other) {
      if (other == null) {
        return;
      }
      if (other.HasUri) {
        Uri = other.Uri;
      }
      if (other.HasLastPlayedTime) {
        LastPlayedTime = other.LastPlayedTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uri = input.ReadString();
            break;
          }
          case 16: {
            LastPlayedTime = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Uri = input.ReadString();
            break;
          }
          case 16: {
            LastPlayedTime = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RecentlyPlayed : pb::IMessage<RecentlyPlayed>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RecentlyPlayed> _parser = new pb::MessageParser<RecentlyPlayed>(() => new RecentlyPlayed());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RecentlyPlayed> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spotify.RecentlyPlayedBackend.Proto.RecentlyPlayedBackendReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecentlyPlayed() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecentlyPlayed(RecentlyPlayed other) : this() {
      _hasBits0 = other._hasBits0;
      contexts_ = other.contexts_.Clone();
      offset_ = other.offset_;
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecentlyPlayed Clone() {
      return new RecentlyPlayed(this);
    }

    /// <summary>Field number for the "contexts" field.</summary>
    public const int ContextsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Spotify.RecentlyPlayedBackend.Proto.Context> _repeated_contexts_codec
        = pb::FieldCodec.ForMessage(10, global::Spotify.RecentlyPlayedBackend.Proto.Context.Parser);
    private readonly pbc::RepeatedField<global::Spotify.RecentlyPlayedBackend.Proto.Context> contexts_ = new pbc::RepeatedField<global::Spotify.RecentlyPlayedBackend.Proto.Context>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Spotify.RecentlyPlayedBackend.Proto.Context> Contexts {
      get { return contexts_; }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 2;
    private readonly static int OffsetDefaultValue = 0;

    private int offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Offset {
      get { if ((_hasBits0 & 1) != 0) { return offset_; } else { return OffsetDefaultValue; } }
      set {
        _hasBits0 |= 1;
        offset_ = value;
      }
    }
    /// <summary>Gets whether the "offset" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOffset {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "offset" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOffset() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 3;
    private readonly static int TotalDefaultValue = 0;

    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { if ((_hasBits0 & 2) != 0) { return total_; } else { return TotalDefaultValue; } }
      set {
        _hasBits0 |= 2;
        total_ = value;
      }
    }
    /// <summary>Gets whether the "total" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTotal {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "total" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTotal() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RecentlyPlayed);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RecentlyPlayed other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!contexts_.Equals(other.contexts_)) return false;
      if (Offset != other.Offset) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= contexts_.GetHashCode();
      if (HasOffset) hash ^= Offset.GetHashCode();
      if (HasTotal) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      contexts_.WriteTo(output, _repeated_contexts_codec);
      if (HasOffset) {
        output.WriteRawTag(16);
        output.WriteInt32(Offset);
      }
      if (HasTotal) {
        output.WriteRawTag(24);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      contexts_.WriteTo(ref output, _repeated_contexts_codec);
      if (HasOffset) {
        output.WriteRawTag(16);
        output.WriteInt32(Offset);
      }
      if (HasTotal) {
        output.WriteRawTag(24);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += contexts_.CalculateSize(_repeated_contexts_codec);
      if (HasOffset) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Offset);
      }
      if (HasTotal) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RecentlyPlayed other) {
      if (other == null) {
        return;
      }
      contexts_.Add(other.contexts_);
      if (other.HasOffset) {
        Offset = other.Offset;
      }
      if (other.HasTotal) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            contexts_.AddEntriesFrom(input, _repeated_contexts_codec);
            break;
          }
          case 16: {
            Offset = input.ReadInt32();
            break;
          }
          case 24: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            contexts_.AddEntriesFrom(ref input, _repeated_contexts_codec);
            break;
          }
          case 16: {
            Offset = input.ReadInt32();
            break;
          }
          case 24: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
